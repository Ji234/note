如果按照全部没有所有权看的话，那什么也不做就是浪费时间了！
而且在做的过程中没有产生价值,那就算啥也没做,学习一个东西如果没有产出就相当于啥也没做!害我之前所做的那些真是没有价值的活动,好像现在也没有啥价值!

we have to find the solution, and implement them step by step

oneplus 7 一加7主板不好安装,如何解决?
 安装一加7的主板的时候 左边要压下去一点,让左边的卡口对准边框的洞,用一点点力气,还是要这样右边就可以放得下了,要不然在右边的主板与背板不能紧密的贴合


笔记本cpu很小的如何让硅脂长时间的留在cpu上面,不要让cpu 上面的硅脂流到到处都是,如何解决?
 涂抹硅脂的时候将硅脂里面多余的硅油吸走(用纸巾).让cpu 上面的硅脂硅油比较少,这样保存时间比较长 


tcp与udp相关的知识
 {1}首先udp与tcp最根本的区别是一个面向连接,一个不面向连接。
  面向连接相当于打电话。接通电话，相互通话，结束挂断，状态切换很明确。要求知道（1）否传输成功，（2）保证传输数据的顺序，（3）传输过程中丢失了一些数据知道是哪些并且要求重传
  不面向连接相当于写信，上面三个都不支持
 {}如果使用没有进行可靠性验证的udp协议发送一个较大的文件会怎么样
  丢包可能随时在传输过成中出现, 但最大的危机是在接收过程中缓冲区溢出导致数据丢失, 因为在最开始传输文件的时候我们是直接把报文传给网卡没有经过分片的操作, 但是在传输过程中
  udp是将数据切成数据包再一次性发出去，各个切片之间没有什么联系。 如果对面处理不过来的话我们是不知道的, 发快了直接导致数据丢失。
 {}三次握手和四次挥手的相关知识
   （1）名词解释
    SYN（synchronous）：建立连接
    ACK（acknowledgement）：确认
    PSH（push）：传送
    FIN（finish）：结束
    RST（reset）：重置状态（你发错了，我么再从新开始）
    URG（urgent）：紧急
    Sequence number：顺序号码
    Acknowledge number：确认号码
    
    
   （2）三次握手过程（保证两方的接收和发送都是正常的）
    客户端   服务端
    SYN->
    .         <-ACK+SYN
    SYN（可以发送数据）->
    
   （3）丢包和数据错乱问题
    从发送缓冲区取出一部分报文（报文是想要发送数据的切片，而且每个切片是经过编号的），而且总是以一定的数据量才能形成一个数据报。不足的都在缓冲区等待补足。
    超过的多余的存放在缓冲区。在发送数据数据报的时候就附带了数据的长度和开始的切片位置，到接收端的时候可能不是按照顺序到达的。为了保证顺序的正确会在缓冲区进行排序。
    并且在缓冲区查看数据是否有丢包。
    
    
   （4）四次挥手过程
    客户端   服务端
    FIN->
    .         <-ACK（还可以发送数据）
    .         <-FIN（发送之后进入等待状态）
    ACK（发出到之后进入超时等待）-> 服务端立即关闭
    如果最后的ACK没有被服务端收到就会重新发送FIN包
 {}服务端一个端口可以建立多少tcp连接？
    答案：说有ip地址*port，实际是取决于服务端的内存数
    服务器内部是根据ip：port来分辨tcp连接的。客户端的ip数量加上port数量就是这个数字的最大值，当然使用nat技术会大大减少客户端的可用tcp连接数量
  
 {}tcp滑动窗口（流量控制）和拥塞控制
 {}网络五层结构
 
 
